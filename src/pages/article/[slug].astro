---
import "../../styles/global.css";

import { CollectionEntry, getCollection } from "astro:content";

import Navigation from "../../components/Navigation.astro";
import Head from "../../components/Head.astro";
import DevToIcon from "../../components/icons/DevToIcon.astro";
import Analytics from "../../components/Analytics.astro";
import Footer from "../../components/Footer.astro";
import Likes from "../../components/Likes.astro";

export async function getStaticPaths() {
    const articles = await getCollection("blog");
    const authors = await getCollection("author");

    return articles.map((post) => {
        return {
            params: {
                slug: post.slug,
            },
            props: {
                post,
                author: authors.find(
                    (author) => author.slug === post.data.author
                ),
            },
        };
    });
}

function formatDate(date: Date) {
    const months = [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
    ];

    const day = date.getDate();
    const monthIndex = date.getMonth();
    const year = date.getFullYear();

    const currentYear = new Date().getFullYear();

    if (year === currentYear) {
        return `${day} ${months[monthIndex]}`;
    } else {
        return `${day} ${months[monthIndex]} ${year}`;
    }
}

interface Props {
    post: CollectionEntry<"blog">;
    author: CollectionEntry<"author">;
}

const { post, author } = Astro.props;
const schema = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    mainEntityOfPage: {
        "@type": "WebPage",
        "@id": "https://www.webry.com/article/" + post.slug,
    },
    headline: post.data.title,
    description: post.data.share.description,
    image: `https://www.webry.com/assets/blog/${post.slug}/cover.jpg.webp`,
    author: {
        "@type": "Person",
        name: author.data.name,
        url: author.data.linkedin,
    },
    publisher: {
        "@type": "Organization",
        name: "Webry",
        logo: {
            "@type": "ImageObject",
            url: "https://www.webry.com/assets/branding/logo-light.svg",
        },
    },
    datePublished: post.data.date.toISOString(),
    dateModified: post.data.moddate.toISOString(),
});
const { Content } = await post.render();
// HEHE: https://dev.to/api/articles/me
// TODO: Future me, https://dev.to/api/articles/1439742
---

<html lang="en">
    <head>
        <Head />
        <meta name="description" content={post.data.share.description} />
        <meta name="author" content={author.data.name} />

        <meta name="twitter:card" content="summary" />
        <meta name="twitter:title" content={post.data.title} />
        <meta
            name="twitter:description"
            content={post.data.share.description}
        />
        <meta name="twitter:image" content={post.data.cover} />

        <meta property="og:type" content="article" />
        <meta
            property="article:published_time"
            content={post.data.date.toString()}
        />
        <meta property="article:author" content={author.data.name} />
        <meta property="article:tag" content={post.data.tags.join(",")} />

        <meta property="og:title" content={post.data.title} />
        <meta property="og:description" content={post.data.share.description} />
        <meta property="og:image" content={post.data.cover} />
        <meta
            property="og:url"
            content={`https://www.webry.com/${post.slug}`}
        />
        <meta property="og:locale" content="en_US" />
        <meta property="og:locale:alternate" content="en_GB" />

        <title>{post.data.title}</title>

        <link rel="canonical" href={post.data.devto} />
        <script type="application/ld+json" set:html={schema}></script>
        <Analytics />
    </head>
    <body>
        <Navigation />
        <main class="container">
            <article
                class="content flow-content-big"
                devto-id={post.data.devtoid}
            >
                <div class="relative">
                    <img src={post.data.cover} alt="Cover" class="cover" />
                    <a
                        class="read-on-devto absolute bottom-0 right-0 badge badge--clickable badge--active badge--black"
                        href={post.data.devto}
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <div class="flex text-white items-center">
                            <span class="mr-2 w-max hide-mobile">Read on</span>
                            <DevToIcon />
                        </div>
                    </a>
                </div>
                <div class="flow-content">
                    <h1 class="text-heading">{post.data.title}</h1>
                    <div class="author-wrapper">
                        <div class="author">
                            <a
                                href="/about"
                                aria-label="About Samuel Braun"
                                title="About Samuel Braun"
                                class="author__image-wrapper"
                                ><img
                                    src={author.data.image}
                                    alt="Author"
                                    class="author__image"
                                /></a
                            >
                            <div class="author__name">
                                <a
                                    href="/about"
                                    aria-label="About Samuel Braun"
                                    class="mx-2 whitespace-nowrap"
                                    >{author.data.name}</a
                                > · <span class="mx-2 whitespace-nowrap"
                                    ><svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="18"
                                        height="18"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        stroke-width="2"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        class="feather feather-book-open inline-block mr-1"
                                        ><path
                                            d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"
                                        ></path><path
                                            d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"
                                        ></path></svg
                                    >
                                    {post.data.min} min
                                </span> ·
                                <time
                                    class="mx-2 whitespace-nowrap"
                                    title={"Published on " +
                                        formatDate(new Date(post.data.date))}
                                    >{
                                        formatDate(new Date(post.data.date))
                                    }</time
                                >
                            </div>
                        </div>
                        <div>
                            <div class="socials">
                                <Likes devtoId={post.data.devtoid} />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="main-markdown-content flow-content">
                    <Content />
                </div>
            </article>
        </main>
        <button aria-label="Scroll to top" class="scroll-to-top">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-chevron-up"
                ><polyline points="18 15 12 9 6 15"></polyline></svg
            >
        </button>
        <Footer />
        <script is:inline>
            window.onLoad(() => {
                const links = document.querySelectorAll("main a");
                links.forEach((link) => {
                    if (
                        link instanceof HTMLLinkElement &&
                        link.href.startsWith("http")
                    ) {
                        link.setAttribute("target", "_blank");
                        link.setAttribute("rel", "noopener noreferrer");
                    }
                });

                const scrollButton = document.querySelector(".scroll-to-top");
                scrollButton.addEventListener("click", () => {
                    window.scrollTo({ top: 0, behavior: "smooth" });
                });

                // add copy to clipboard button to code blocks
                const codeBlocks = document.querySelectorAll(".astro-code");
                codeBlocks.forEach((codeBlock) => {
                    const button = document.createElement("button");
                    button.classList.add("copy-to-clipboard");
                    button.setAttribute("aria-label", "Copy to clipboard");
                    button.innerHTML = `<svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="feather feather-copy"
                    >
                        <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                        <path
                            d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"
                        ></path>
                    </svg>`;
                    button.addEventListener("click", () => {
                        navigator.clipboard.writeText(codeBlock.innerText);

                        // show confirmation by changing the button background to green
                        button.classList.add("copied");
                        setTimeout(() => {
                            button.classList.remove("copied");
                        }, 1500);
                    });
                    codeBlock.appendChild(button);
                });
            });
        </script>
        <style>
            .container {
                max-width: 100ch;
                margin: 0 auto;
                margin-top: 5vh;
                border-radius: 0.5rem;
                padding: 0 3rem;
            }

            .read-on-devto {
                background: transparent !important;
                cursor: pointer;
            }

            .socials {
                justify-content: flex-end;
            }

            .cover {
                border-radius: 1rem;
                width: 100%;
            }

            .author-wrapper {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .author__image-wrapper {
                flex: 0 0 3rem;
            }

            .author {
                display: flex;
                align-items: center;
                text-align: left;
            }

            .author__image {
                width: 2.5rem;
                height: 2.5rem;
                border-radius: 50%;
                margin-right: 1rem;
            }

            .author__name {
                line-height: 1.5rem;
            }

            .scroll-to-top {
                position: sticky;
                bottom: 3rem;
                left: calc(100vw - 7rem);
                background: var(--color-black);
                color: var(--color-white);
                border-radius: 50%;
                width: 3rem;
                height: 3rem;
                display: flex;
                justify-content: center;
                align-items: center;
                cursor: pointer;
            }

            .scroll-to-top:hover {
                background: var(--color-dark-secondary);
            }

            @media (max-width: 768px) {
                .scroll-to-top {
                    bottom: 3rem;
                }
            }

            @media (max-width: 440px) {
                .author__image-wrapper {
                    display: none;
                }

                .author__name {
                    margin-left: -0.5rem;
                }
            }
        </style>
    </body>
</html>
